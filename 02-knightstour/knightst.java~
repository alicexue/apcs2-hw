import java.io.*;
import java.util.*;

public class ktour {
    private int[][] board;
    private int maxX = 5;
    private int maxY = 5;
    private boolean solved = false;

    public void delay(int n){
	try {
	    Thread.sleep(n);
	} catch (Exception e) {}
    }

    public ktour() {
	board = new char[maxX+2][maxY+2];
	for (int i=0; i<maxX+2; i++) {
	    for (int j=0; j<maxY+2; j++) {
		if (i<2 || i>=maxX || j<2 || j>=maxX) {
		    board[i][j]=-1;
		} else {
		    board[i][j]=0;
		}
	    }
	}
    }
    
    public void print() {
	int temp;
	//String s = "[2J\n";
	System.out.println("[2J\n");
	for (int i=2;i<=maxX;i++) {
	    if (i==maxX) {
		//s+="\n";
	   	System.out.printf("\n");
	    }
	    for (int j=2;j<maxY;j++) {
		if (i!=maxX) {
		    //s+=board[i][j];
		    temp=board[i][j];
		    System.out.printf("|%d",temp);
		}
	    }
	}
    }
		

    public void solve(int x, int y) {
	if (board[x][y]==-1 || solved) {
	    return;
	}
	if (vsquares==maxX*maxY) {
	    //print();
	    solved = true;
	}
	delay(100);
	//print();
	board[x][y]=knight;
	solve(x+2,y+1);
	solve(x+2,y-1);
	solve(x+1,y+2);		
	solve(x+1,y-2);      
	solve(x-2,y+1);
	solve(x-2,y-1);
	solve(x-1,y+2);
	solve(x-1,y-2);
	if (!solved) {
	    vsquares++;
	}
    }

    public static void main(String[] args) {
	ktour k = new ktour();
	System.out.println(k);
	k.solve(2,2);
	System.out.println(k);
    }
}